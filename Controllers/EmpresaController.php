<?php namespace App\Http\Controllers;use App\Http\Requests;use App\Http\Requests\CreateEmpresaRequest;use Illuminate\Http\Request;use App\Libraries\Repositories\EmpresaRepository;use Mitul\Controller\AppBaseController;use Response;use Flash;class EmpresaController extends AppBaseController{	/** @var  EmpresaRepository */	private $empresaRepository;	function __construct(EmpresaRepository $empresaRepo){		$this->empresaRepository = $empresaRepo;	}		public function index(Request $request){	    $input = $request->all();		$result = $this->empresaRepository->search($input);        $empresas = $this->empresaRepository->all($input);		return view('empresas.index')		    ->with('empresas', $empresas);	}	/**	 * Show the form for creating a new Empresa.	 *	 * @return Response	 */	public function create()	{        $edos = [];		$estados = $this->empresaRepository->selectEstados();        $ciudades = $this->empresaRepository->selectCiudades();        $ciudades = json_encode($ciudades);        //acomodar para solo meterlo al select, nice!        for($i=0;$i<count($estados);$i++)		{			$edos[$estados[$i]->id] = $estados[$i]->title;		}		return view('empresas.create')->with('estados',$edos)->with('ciudades',$ciudades);	}	/**	 * Store a newly created Empresa in storage.	 *	 * @param CreateEmpresaRequest $request	 *	 * @return Response	 */	public function store(CreateEmpresaRequest $request)	{        $input = $request->all();        if($request->hasFile('img_logo')){            $file = $request->file('img_logo');            $extension= $file->getClientOriginalExtension();            $nombreImagen = 'logo.'.$extension;            $file->move(public_path().'/img/uploads/empresa',$nombreImagen);            $input['img_logo']=$nombreImagen;        }        if($request->hasFile('archivoCer')){            $nombreImagen = $request->file('archivoCer')->getClientOriginalName();            $request->file('archivoCer')->move(public_path().'/comprobantes/files',$nombreImagen);            $input["certificado"]=$nombreImagen;        }        if($request->hasFile('archivoKey')){            $nombreImagen = $request->file('archivoKey')->getClientOriginalName();            $request->file('archivoKey')->move(public_path().'/comprobantes/files',$nombreImagen);            shell_exec("openssl pkcs8 -inform DER -in '".public_path()."/comprobantes/files/".$nombreImagen."' -out '".public_path()."/comprobantes/files/".$nombreImagen.".pem' -passin pass:'".$input["claveprivada"]."'");            $input["keypass"]=$nombreImagen;        }		$empresa = $this->empresaRepository->store($input);		Flash::message('Datos Almacenados Correctamente.');		return redirect(route('empresas.index'));	}	/**	 * Display the specified Empresa.	 *	 * @param  int $id	 *	 * @return Response	 */	public function show($id)	{		$empresa = $this->empresaRepository->findEmpresaById($id);		if(empty($empresa))		{			Flash::error('Empresa not found');			return redirect(route('empresas.index'));		}		return view('empresas.show')->with('empresa', $empresa);	}	/**	 * Show the form for editing the specified Empresa.	 *	 * @param  int  $id	 * @return Response	 */	public function edit($id)	{		$edos = [];		$estados = $this->empresaRepository->selectEstados();		$ciudades = $this->empresaRepository->selectCiudades();		$ciudades = json_encode($ciudades);		//acomodar para solo meterlo al select, nice!		for($i=0;$i<count($estados);$i++)		{			$edos[$estados[$i]->id] = $estados[$i]->title;		}		$empresa = $this->empresaRepository->findEmpresaById($id);		/* print_r($empresa['logo']);         $image = $empresa['logo'];         print_r($image);         $empresa['logo']->value=$empresa['logo'];*/		if(empty($empresa))		{			Flash::error('No se Encontraron resultados.');			return redirect(route('empresas.index'));		}		return view('empresas.edit')				->with('empresa', $empresa)				->with('estados',$edos)				->with('ciudades',$ciudades);	}	/**	 * Update the specified Empresa in storage.	 *	 * @param  int    $id	 * @param CreateEmpresaRequest $request	 *	 * @return Response	 */	public function update($id, CreateEmpresaRequest $request){		$empresa = $this->empresaRepository->findEmpresaById($id);        if(empty($empresa)){			Flash::error('No se encontraron resultados.');			return redirect(route('empresas.index'));		}        $input = $request->all();        if($request->hasFile('img_logo')){            $file = $request->file('img_logo');            $extension = $file->getClientOriginalExtension();            $nombreImagen = 'logo.'.$extension;            $file->move(public_path().'/img/uploads/empresa',$nombreImagen);            $input['img_logo'] = $nombreImagen;        }        /*if($request->hasFile('archivoCer')){            $nombreImagen = $request->file('archivoCer')->getClientOriginalName();            $request->file('archivoCer')->move(public_path().'/comprobantes/files',$nombreImagen);            //$input["certificado"]=$nombreImagen;        }        if($request->hasFile('archivoKey')){            $nombreImagen = $request->file('archivoKey')->getClientOriginalName();            $request->file('archivoKey')->move(public_path().'/comprobantes/files',$nombreImagen);            shell_exec("openssl pkcs8 -inform DER -in '".public_path()."/comprobantes/files/".$nombreImagen."' -out '".public_path()."/comprobantes/files/".$nombreImagen.".pem' -passin pass:'".$input["claveprivada"]."'");            //$input["keypass"]=$nombreImagen;        }*/		$empresa = $this->empresaRepository->update($empresa,$input);		Flash::message('Empresa Modificada Exitosamente.');		return redirect(route('empresas.index'));	}	/**	 * Remove the specified Empresa from storage.	 *	 * @param  int $id	 *	 * @return Response	 */	public function destroy($id)	{		$empresa = $this->empresaRepository->findEmpresaById($id);		if(empty($empresa))		{			Flash::error('Empresa not found');			return redirect(route('empresas.index'));		}		$empresa->delete();		Flash::message('Empresa Eliminada Exitosamente.');		return redirect(route('empresas.index'));	}}